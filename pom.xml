<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- By default, run only fast and unit tests (integration tests excluded for speed) -->
					<groups>fast,unit</groups>
					<excludedGroups>integration</excludedGroups>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!--
	  Convenience Maven profile for running tests against a real Postgres instance.
	  Usage:
	    mvn -P real-db-test test
	
	  When the profile is active Spring will load `src/test/resources/application-real.properties`
	  which contains the hard-coded DB connection settings (copied from main application.properties).
	  The profile also forwards TEST_DB_* system properties if you prefer overriding values from the CLI.
	-->
	<profiles>
		<profile>
			<id>real-db-test</id>
			<properties>
				<!-- Activate Spring 'real' profile during tests -->
				<spring.profiles.active>real</spring.profiles.active>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- Forward the Spring profile as a surefire system property to the forked test JVM. -->
							<systemPropertyVariables>
								<spring.profiles.active>real</spring.profiles.active>
								<TEST_DB_URL>${TEST_DB_URL}</TEST_DB_URL>
								<TEST_DB_USERNAME>${TEST_DB_USERNAME}</TEST_DB_USERNAME>
								<TEST_DB_PASSWORD>${TEST_DB_PASSWORD}</TEST_DB_PASSWORD>
								<TEST_DB_DRIVER>${TEST_DB_DRIVER}</TEST_DB_DRIVER>
								<TEST_JPA_DIALECT>${TEST_JPA_DIALECT}</TEST_JPA_DIALECT>
								<TEST_JPA_DDL_AUTO>${TEST_JPA_DDL_AUTO}</TEST_JPA_DDL_AUTO>
								<TEST_SHOW_SQL>${TEST_SHOW_SQL}</TEST_SHOW_SQL>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile to run ALL tests including slow integration tests -->
		<profile>
			<id>all-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- Run all test types -->
							<groups>fast,unit,integration</groups>
							<excludedGroups></excludedGroups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile to run ONLY integration tests -->
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- Run only integration tests -->
							<groups>integration</groups>
							<excludedGroups></excludedGroups>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>